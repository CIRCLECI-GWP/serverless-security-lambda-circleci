version: 2.1

orbs:
  terraform: circleci/terraform@3.6.0
  aws-cli: circleci/aws-cli@4.1.2
  snyk: snyk/snyk@2.3.0

jobs:

  project_checkout:
    machine:
      image: ubuntu-2204:edge
      docker_layer_caching: true
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  build_lambdas:
    docker:
      - image: cimg/node:21.4.0
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ./      
      - run:
          command: |
            cd src/lambda
            npm install
      # - snyk/scan:
      #     token-variable: SNYK_API_TOKEN
      #     target-file: src/lambda/package.json
      - persist_to_workspace:
          paths:
            - "."
          root: "~"
      - persist_to_workspace:
          root: .
          paths:
            - src/lambda

  security_scan:
    docker:
      - image: cimg/node:21.4.0
    steps:
      - attach_workspace:
          at: ./
      - attach_workspace:
          at: /src/lambda
      - snyk/scan:
          token-variable: SNYK_API_TOKEN
          target-file: src/lambda/package.json

  plan_infrastructure:
    executor: terraform/default
    steps:
      - attach_workspace:
          at: "./"
      - attach_workspace:
          at: /src/lambda
      - run: echo "Executing terraform init"      
      - terraform/init:
          path: infrastructure
          backend_config: |
            access_key=$AWS_ACCESS_KEY_ID,
            secret_key=$AWS_SECRET_ACCESS_KEY
      - run: echo "Executing terraform plan"
      - terraform/plan:
          path: infrastructure
          var: |
            terraform_aws_access_key=$AWS_ACCESS_KEY_ID
            terraform_aws_secret_key=$AWS_SECRET_ACCESS_KEY
      - run:
          command: |
            cd src/lambda
      - persist_to_workspace:
          paths:
            - "."
          root: "~"

  apply_infrastructure:
    executor: terraform/default
    steps:
      - attach_workspace:
          at: "./"
      - run: echo "Executing terraform apply"
      - terraform/apply:
          path: infrastructure
          backend_config: |
            access_key=$AWS_ACCESS_KEY_ID,
            secret_key=$AWS_SECRET_ACCESS_KEY
          var: |
            terraform_aws_access_key=$AWS_ACCESS_KEY_ID
            terraform_aws_secret_key=$AWS_SECRET_ACCESS_KEY
      - persist_to_workspace:
          paths:
            - "."
          root: "~"

workflows:
 ci-cd:
    jobs:
      - project_checkout
      - build_lambdas:
          name: build_lambdas
          requires: 
            - project_checkout
      - security_scan:
          name: security_scan
          requires: 
            - build_lambdas
      - plan_infrastructure:
          name: plan_infrastructure
          requires:
            - build_lambdas
      - apply_infrastructure:
          name: apply_infrastructure
          requires:
            - plan_infrastructure